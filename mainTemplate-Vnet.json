{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "WebAppNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Prefix used for creating web applications"
      }
    },
    "TenantID": {
      "type": "string",
      "metadata": {
        "description": "The value should match the value provided for Active Directory TenantID in the Technical Configuration of the Transactable Offer in Partner Center"
      }
    },
    "ADApplicationID": {
      "type": "string",
      "metadata": {
        "description": "The value should match the value provided for Active Directory Application ID in the Technical Configuration of the Transactable Offer in Partner Center"
      }
    },
    "ADApplicationSecret": {
      "type": "securestring",
      "metadata": {
        "description": "Secret key of the AD Application"
      }
    },
    "ADMTApplicationID": {
      "type": "string",
      "metadata": {
        "description": "The value should match the value provided for Single Tenant Active Directory Application ID in the Technical Configuration of the Transactable Offer in Partner Center"
      }
    },
    "SqlAdminLoginPassword": {
      "type": "string",
      "defaultValue": "[newGuid()]"
    },
    "PublisherAdminUsers": {
      "type": "string",
      "metadata": {
        "description": "Provide a list of email addresses (as comma-separated-values) that should be granted access to the Publisher Portal"
      },
      "defaultValue": ""
    }
  },
  "variables": {
    "alwaysOn": true,
    "skuCode": "B1",
    "location": "[resourceGroup().location]",
    "appServicePlanName": "[concat(parameters('webAppNamePrefix'),'-asp')]",
    "ProvisioningServiceAppName": "[concat(parameters('webAppNamePrefix'),'-portal')]",
    "PublisherServiceAppName": "[concat(parameters('webAppNamePrefix'),'-admin')]",
    "sqlServerName": "[concat(parameters('webAppNamePrefix'),'-sql')]",
    "sqlDBName": "AMPSaaSDB",
    "sqlAdminLogin": "[concat('saasdbadmin', substring(uniqueString(resourceGroup().id),0,6))]",
    "sqlAdminLoginPassword": "[parameters('SqlAdminLoginPassword')]",
    "networkName": "[concat(parameters('webAppNamePrefix'),'-net')]",
    "customerSitePackagePath": "[uri(deployment().properties.templateLink.uri, 'CustomerSite.zip')]",
    "adminSitePackagePath": "[uri(deployment().properties.templateLink.uri, 'AdminSite.zip')]",
    "sqlScriptPath": "[uri(deployment().properties.templateLink.uri, 'script.sql')]",
    "$fxv#0": "cd /mnt/azscripts/azscriptinput\r\nls\r\nInstall-Module sqlserver -Force\r\nInvoke-Sqlcmd -InputFile /mnt/azscripts/azscriptinput/script.sql -ServerInstance ${Env:sqlserverName} -database ${Env:sqlDBName} -Username ${Env:sqlAdminLogin} -Password ${Env:sqlAdminLoginPassword}"
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2022-07-01",
      "name": "[variables('networkName')]",
      "location": "eastus",
      "dependsOn": [],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "default",
            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('networkName'), 'default')]",
            "properties": {
              "addressPrefix": "10.0.0.0/24",
              "delegations": [],
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            },
            "type": "Microsoft.Network/virtualNetworks/subnets"
          },
          {
            "name": "web",
            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('networkName'), 'web')]",
            "properties": {
              "addressPrefix": "10.0.1.0/24",
              "serviceEndpoints": [
                {
                  "service": "Microsoft.Web",
                  "locations": [
                    "*"
                  ]
                },
                {
                  "service": "Microsoft.KeyVault",
                  "locations": [
                    "*"
                  ]
                }
              ],
              "delegations": [
                {
                  "name": "delegation",
                  "id": "[concat(resourceId('Microsoft.Network/virtualNetworks/subnets', variables('networkName'), 'web'), '/delegations/delegation')]",
                  "properties": {
                    "serviceName": "Microsoft.Web/serverfarms"
                  },
                  "type": "Microsoft.Network/virtualNetworks/subnets/delegations"
                }
              ],
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            },
            "type": "Microsoft.Network/virtualNetworks/subnets"
          },
          {
            "name": "sql",
            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('networkName'), 'sql')]",
            "properties": {
              "addressPrefix": "10.0.2.0/24",
              "serviceEndpoints": [
                {
                  "service": "Microsoft.Sql",
                  "locations": [
                    "*"
                  ]
                },
                {
                  "service": "Microsoft.KeyVault",
                  "locations": [
                    "*"
                  ]
                }
              ],
              "delegations": [],
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            },
            "type": "Microsoft.Network/virtualNetworks/subnets"
          },
          {
            "name": "keyVault",
            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('networkName'), 'keyVault')]",
            "properties": {
              "addressPrefix": "10.0.3.0/24",
              "serviceEndpoints": [
                {
                  "service": "Microsoft.KeyVault",
                  "locations": [
                    "*"
                  ]
                }
              ],
              "delegations": [],
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            },
            "type": "Microsoft.Network/virtualNetworks/subnets"
          }
        ],
        "virtualNetworkPeerings": [],
        "enableDdosProtection": false
      }
    },
    {
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2015-05-01-preview",
      "name": "[variables('sqlServerName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
      "[resourceId('Microsoft.Network/virtualNetworks', variables('networkName'))]"
      ],      
      "properties": {
        "administratorLogin": "[variables('SQLAdminLogin')]",
        "administratorLoginPassword": "[variables('SQLAdminLoginPassword')]",
        "version": "12.0"
      },
      "resources": [
        {
          "type": "firewallrules",
          "name": "AllowAllAzureIps",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-05-01-preview",
          "dependsOn": [
            "[variables('sqlServerName')]"
          ],
          "properties": {
            "startIpAddress": "0.0.0.0",
            "endIpAddress": "0.0.0.0"
          }
        }
      ]
    },
    {
      "comments": "Adding existing VNET to the SQL Server",
      "type": "Microsoft.Sql/servers/virtualNetworkRules",
      "name": "[concat(variables('sqlServerName'), '/internal')]",
      "apiVersion": "2015-05-01-preview",
      "scale": null,
      "properties": {
        "virtualNetworkSubnetId": "[reference(resourceId('Microsoft.Network/virtualNetworks', variables('networkName'))).subnets[2].id]",
        "ignoreMissingVnetServiceEndpoint": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('networkName'))]"    
      ]
    },
    {
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "2017-03-01-preview",
      "name": "[concat(string(variables('sqlServerName')), '/', string(variables('sqlDBName')))]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('networkName'))]"  
      ],
      "sku": {
        "name": "S0",
        "tier": "Standard"
      },
      "kind": "v12.0,user",
      "properties": {
        "collation": "SQL_Latin1_General_CP1_CI_AS",
        "maxSizeBytes": 268435456000,
        "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
        "zoneRedundant": false
      }
    },
    {
      "type": "Microsoft.Resources/deploymentScripts",
      "apiVersion": "2020-10-01",
      "name": "createSqlSchema",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]",
        "[resourceId('Microsoft.Sql/servers/databases', variables('sqlServerName'), variables('sqlDBName'))]"
      ],
      "kind": "AzurePowerShell",
      "properties": {
        "azPowerShellVersion": "8.0",
        "scriptContent": "[variables('$fxv#0')]",
        "timeout": "PT4H",
        "cleanupPreference": "OnSuccess",
        "retentionInterval": "P1D",
        "supportingScriptUris": [
          "[variables('sqlScriptPath')]"
        ],
        "environmentVariables": [
          {
            "name": "sqlserverName",
            "value": "[concat(variables('sqlServerName'), '.database.windows.net')]"
          },
          {
            "name": "sqlDBName",
            "value": "[variables('sqlDBName')]"
          },
          {
            "name": "sqlAdminLogin",
            "value": "[variables('sqlAdminLogin')]"
          },
          {
            "name": "sqlAdminLoginPassword",
            "secureValue": "[variables('sqlAdminLoginPassword')]"
          }
        ]
      }
    },
    // App service plan and web apps
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2019-08-01",
      "name": "[variables('appServicePlanName')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "[variables('skuCode')]",
        "capacity": "1"
      },
      "tags": {
        "displayName": "[variables('appServicePlanName')]"
      },
      "properties": {
        "name": "[variables('appServicePlanName')]"
      },
      "kind": "linux"
    },
    {
      "name": "[variables('ProvisioningServiceAppName')]",
      "type": "Microsoft.Web/sites",
      "apiVersion": "2019-08-01",
      "location": "[variables('location')]",
      "identity": {
        "type": "SystemAssigned"
      },      
      "tags": {
        "displayName": "[variables('ProvisioningServiceAppName')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "[resourceId('Microsoft.Sql/servers/databases', variables('sqlServerName'), variables('sqlDBName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('networkName'))]"
      ],
      "properties": {
        "name": "[variables('ProvisioningServiceAppName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "httpsOnly": true,
        "virtualNetworkSubnetId": "[reference(resourceId('Microsoft.Network/virtualNetworks', variables('networkName'))).subnets[1].id]",
        "siteConfig": {
          "connectionStrings": [
            {
              "name": "DefaultConnection",
              "connectionString": "[concat('Data Source=tcp:', reference(concat('Microsoft.Sql/servers/', variables('sqlServerName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=AMPSaaSDB', ';User Id=', variables('SQLAdminLogin'), '@', reference(concat('Microsoft.Sql/servers/', variables('sqlServerName'))).fullyQualifiedDomainName, ';Password=', variables('SQLAdminLoginPassword'), ';')]"
            }
          ],
          "appSettings": [
            {
              "name": "ASPNETCORE_ENVIRONMENT",
              "value": "Development",
              "slotSetting": false
            },
            {
              "name": "SaaSApiConfiguration__AdAuthenticationEndPoint",
              "value": "https://login.microsoftonline.com",
              "slotSetting": false
            },
            {
              "name": "SaaSApiConfiguration__ClientId",
              "value": "[parameters('ADApplicationID')]",
              "slotSetting": false
            },
            {
              "name": "SaaSApiConfiguration__ClientSecret",
              "value": "[parameters('ADApplicationSecret')]",
              "slotSetting": false
            },
            {
              "name": "SaaSApiConfiguration__MTClientId",
              "value": "[parameters('ADMTApplicationID')]",
              "slotSetting": false
            },
            {
              "name": "SaaSApiConfiguration__FulFillmentAPIBaseURL",
              "value": "https://marketplaceapi.microsoft.com/api",
              "slotSetting": false
            },
            {
              "name": "SaaSApiConfiguration__FulFillmentAPIVersion",
              "value": "2018-08-31",
              "slotSetting": false
            },
            {
              "name": "SaaSApiConfiguration__GrantType",
              "value": "client_credentials",
              "slotSetting": false
            },
            {
              "name": "SaaSApiConfiguration__Resource",
              "value": "20e940b3-4c77-4b0b-9a53-9e16a1b010a7",
              "slotSetting": false
            },
            {
              "name": "SaaSApiConfiguration__SaaSAppUrl",
              "value": "",
              "slotSetting": false
            },
            {
              "name": "SaaSApiConfiguration__SignedOutRedirectUri",
              "value": "[concat('https://', variables('ProvisioningServiceAppName'), '.azurewebsites.net/Home/Index')]",
              "slotSetting": false
            },
            {
              "name": "SaaSApiConfiguration__TenantId",
              "value": "[parameters('TenantID')]",
              "slotSetting": false
            },
            {
              "name": "KnownUsers",
              "value": "[parameters('PublisherAdminUsers')]",
              "slotSetting": false
            },
            {
              "name": "WEBSITE_HTTPLOGGING_RETENTION_DAYS",
              "value": "1",
              "slotSetting": false
            }
          ],
          "metadata": [
            {
              "name": "CURRENT_STACK",
              "value": "dotnetcore"
            }
          ],
          "alwaysOn": "[variables('alwaysOn')]",
            "ftpsState": "FtpsOnly",
            "http20Enabled": false,
            "minTlsVersion": "1.2"
        }
      },
      "resources": [
        {
          "name": "MSDeploy",
          "type": "extensions",
          "apiVersion": "2019-08-01",
          "location": "[variables('location')]",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('ProvisioningServiceAppName'))]"
          ],
          "tags": {
            "displayName": "Web Deploy for Customer Portal"
          },
          "properties": {
            "packageUri": "[variables('customerSitePackagePath')]",
            "dbType": "None"
          }
        }
      ]
    },
    {
      "name": "[variables('PublisherServiceAppName')]",
      "type": "Microsoft.Web/sites",
      "apiVersion": "2019-08-01",
      "location": "[variables('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "tags": {
        "displayName": "[variables('PublisherServiceAppName')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "[resourceId('Microsoft.Sql/servers/databases', variables('sqlServerName'), variables('sqlDBName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('networkName'))]"
      ],
      "properties": {
        "name": "[variables('PublisherServiceAppName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "httpsOnly": true,
        "virtualNetworkSubnetId": "[reference(resourceId('Microsoft.Network/virtualNetworks', variables('networkName'))).subnets[1].id]",
        "siteConfig": {
          "connectionStrings": [
            {
              "name": "DefaultConnection",
              "connectionString": "[concat('Data Source=tcp:', reference(concat('Microsoft.Sql/servers/', variables('sqlServerName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=AMPSaaSDB', ';User Id=', variables('SQLAdminLogin'), '@', reference(concat('Microsoft.Sql/servers/', variables('sqlServerName'))).fullyQualifiedDomainName, ';Password=', variables('SQLAdminLoginPassword'), ';')]"
            }
          ],
          "appSettings": [
            {
              "name": "ASPNETCORE_ENVIRONMENT",
              "value": "Development",
              "slotSetting": false
            },
            {
              "name": "SaaSApiConfiguration__AdAuthenticationEndPoint",
              "value": "https://login.microsoftonline.com",
              "slotSetting": false
            },
            {
              "name": "SaaSApiConfiguration__ClientId",
              "value": "[parameters('ADApplicationID')]",
              "slotSetting": false
            },
            {
              "name": "SaaSApiConfiguration__ClientSecret",
              "value": "[parameters('ADApplicationSecret')]",
              "slotSetting": false
            },
            {
              "name": "SaaSApiConfiguration__MTClientId",
              "value": "[parameters('ADMTApplicationID')]",
              "slotSetting": false
            },
            {
              "name": "SaaSApiConfiguration__FulFillmentAPIBaseURL",
              "value": "https://marketplaceapi.microsoft.com/api",
              "slotSetting": false
            },
            {
              "name": "SaaSApiConfiguration__FulFillmentAPIVersion",
              "value": "2018-08-31",
              "slotSetting": false
            },
            {
              "name": "SaaSApiConfiguration__GrantType",
              "value": "client_credentials",
              "slotSetting": false
            },
            {
              "name": "SaaSApiConfiguration__Resource",
              "value": "20e940b3-4c77-4b0b-9a53-9e16a1b010a7",
              "slotSetting": false
            },
            {
              "name": "SaaSApiConfiguration__SaaSAppUrl",
              "value": "",
              "slotSetting": false
            },
            {
              "name": "SaaSApiConfiguration__SignedOutRedirectUri",
              "value": "[concat('https://', variables('ProvisioningServiceAppName'), '.azurewebsites.net/Home/Index')]",
              "slotSetting": false
            },
            {
              "name": "SaaSApiConfiguration__TenantId",
              "value": "[parameters('TenantID')]",
              "slotSetting": false
            },
            {
              "name": "KnownUsers",
              "value": "[parameters('PublisherAdminUsers')]",
              "slotSetting": false
            },
            {
              "name": "WEBSITE_HTTPLOGGING_RETENTION_DAYS",
              "value": "1",
              "slotSetting": false
            }
          ],
          "metadata": [
            {
              "name": "CURRENT_STACK",
              "value": "dotnetcore"
            }
          ],
            "alwaysOn": "[variables('alwaysOn')]",
            "ftpsState": "FtpsOnly",
            "http20Enabled": false,
            "minTlsVersion": "1.2"
        }
      },
      "resources": [
        {
          "name": "MSDeploy",
          "type": "extensions",
          "apiVersion": "2019-08-01",
          "location": "[variables('location')]",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('PublisherServiceAppName'))]",
            "[resourceId('Microsoft.Network/virtualNetworks', variables('networkName'))]"
          ],
          "tags": {
            "displayName": "Web Deploy for Publisher Portal"
          },
          "properties": {
            "packageUri": "[variables('adminSitePackagePath')]",
            "dbType": "None"
          }
        }
      ]
    }
  ],
  "outputs": {
    "CustomerPortal": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Web/sites/', variables('ProvisioningServiceAppName'))).hostnames[0]]"
    },
    "PublisherPortal": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Web/sites/', variables('PublisherServiceAppName'))).hostnames[0]]"
    }
  }
}